service: byteee-frontend

provider:
  name: aws
  runtime: nodejs12.x
  region: us-east-1
  stage: ${opt:stage, 'dev'}

custom:
  domain:
    dev: dev.byteee.work
    test: test.byteee.work
    qa: qa.byteee.work
  route53DomainId:
    dev: Z0707308IURWPNKCJ2EA
    test: Z0707308IURWPNKCJ2EA
    qa: Z0707308IURWPNKCJ2EA
    prod: Z0707308IURWPNKCJ2EA
  route53DomainName:
    dev: byteee.work
    test: byteee.work
    qa: byteee.work

  bucketName: ${self:custom.domain.${self:provider.stage}}

plugins:
  - serverless-manifest-plugin

resources:
  Resources:
    AppBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.bucketName}
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: error.html

    DomainRecordSet:
      Type: 'AWS::Route53::RecordSet'
      Properties:
        HostedZoneId: ${self:custom.route53DomainId.${self:provider.stage}}
        Type: A
        Name: ${self:custom.domain.${self:provider.stage}}
        AliasTarget:
          DNSName: !GetAtt CloudFrontDistribution.DomainName
          HostedZoneId: Z2FDTNDATAQYW2

    S3AccessPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: AppBucket
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: '*'
              Action:
                - s3:GetObject
              Resource: arn:aws:s3:::${self:custom.bucketName}/*
            - Sid: CloudFrontGetObjectForUser
              Effect: Allow
              Principal:
                CanonicalUser: !GetAtt CloudFrontOriginAccessIdentity.S3CanonicalUserId
              Action:
                - s3:GetObject
              Resource: arn:aws:s3:::${self:custom.bucketName}/*
            - Sid: PublicReadListBucket
              Effect: Allow
              Principal: '*'
              Action:
                - s3:ListBucket
              Resource: arn:aws:s3:::${self:custom.bucketName}
    WildcartCert:
      Type: AWS::CertificateManager::Certificate
      Properties:
        DomainName: '*.${self:custom.route53DomainName.${self:provider.stage}}'
        SubjectAlternativeNames:
          - '*.${self:custom.route53DomainName.${self:provider.stage}}'
          - '${self:custom.route53DomainName.${self:provider.stage}}'
        DomainValidationOptions:
          - DomainName: '*.${self:custom.route53DomainName.${self:provider.stage}}'
            ValidationDomain: '*.${self:custom.route53DomainName.${self:provider.stage}}'
        ValidationMethod: DNS

    CloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Aliases:
            - ${self:custom.domain.${self:provider.stage}}
          Origins:
            - DomainName: ${self:custom.bucketName}.s3.${self:provider.region}.amazonaws.com
              Id: ReactApp
              S3OriginConfig:
                OriginAccessIdentity:
                  !Join [ '', [ 'origin-access-identity/cloudfront/', !Ref CloudFrontOriginAccessIdentity ] ]
          Enabled: 'true'
          DefaultRootObject: index.html
          CustomErrorResponses:
            - ErrorCode: 404
              ResponseCode: 200
              ResponsePagePath: /index.html
          DefaultCacheBehavior:
            AllowedMethods:
              - DELETE
              - GET
              - HEAD
              - OPTIONS
              - PATCH
              - POST
              - PUT
            TargetOriginId: ReactApp
            ForwardedValues:
              QueryString: 'false'
              Cookies:
                Forward: none
            ViewerProtocolPolicy: redirect-to-https
          ViewerCertificate:
            AcmCertificateArn: !Ref WildcartCert
            MinimumProtocolVersion: TLSv1
            SslSupportMethod: sni-only

    CloudFrontOriginAccessIdentity:
      Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
      Properties:
        CloudFrontOriginAccessIdentityConfig:
          Comment: 'CloudFront OAI'
  Outputs:
    AppBucketName:
      Value:
        Ref: AppBucket
    CloudFrontDistributionId:
      Value:
        Ref: CloudFrontDistribution
